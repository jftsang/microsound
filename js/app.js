(()=>{const e=new(window.AudioContext||window.webkitAudioContext);async function t({channel:t,pitch:n,duration:o,volume:a,waveform:c}){return new Promise((t=>{const l=e.createOscillator(),i=e.createGain();l.type=c;const u=Math.pow(2,(n-53)/48);console.log(n),console.log(u),l.frequency.value=256*u,console.log(l.frequency.value),i.gain.value=a/15,l.connect(i),i.connect(e.destination),l.start(),l.stop(e.currentTime+o/20),l.onended=t}))}document.getElementById("playSound").addEventListener("click",(async()=>{const e=document.getElementById("waveform").value,n=parseInt(document.getElementById("pitchShift").value),o=parseInt(document.getElementById("baseDuration").value),a=document.getElementById("commands").value.split("\n");for(let c=0;c<a.length;c++){const[l,...i]=a[c].split(",");await Promise.all(i.map(((a,c)=>t({channel:c,pitch:parseInt(a.trim())+n,duration:o*l,volume:15/Math.pow(4,c),waveform:e}))))}}))})();